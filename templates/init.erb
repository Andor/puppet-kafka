#!/bin/sh
#
# Init file for Apache Kafka
#
<%- if @osfamily == 'Debian' -%>
### BEGIN INIT INFO
# Provides:          kafka
# Required-Start:    zookeeper
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: Apache Kafka is a distributed publish-subscribe messaging system
### END INIT INFO
<%- else -%>
# chkconfig: 35 85 15
# description: Apache Kafka is a distributed publish-subscribe messaging system
# pidfile: /var/run/kafka.pid
<%- end -%>

NAME=kafka
PID_FILE=/var/run/$NAME.pid
KAFKA_USER=kafka
PGREP_PATTERN=kafka.Kafka

DAEMON="/opt/kafka/bin/kafka-server-start.sh"
DAEMON_OPTS="/opt/kafka/config/server.properties"

export KAFKA_JMX_OPTS="<%= @jmx_opts %>"
export KAFKA_LOG4J_OPTS="<%= @log4j_opts %>"
export KAFKA_HEAP_OPTS="<%= @heap_opts %>"

export KAFKA_HEAP_OPTS="<%= @opts %>"

if [ -f /etc/default/kafka ]; then
    . /etc/default/kafka
fi

start() {
  ulimit -n 65536
  ulimit -s 10240
  ulimit -c unlimited
  if [ -f $PID_FILE ]; then
    PID=`cat $PID_FILE`
    if `ps -p "$PID" -o pid= ` -eq `pgrep -f "$PGREP_PATTERN"`; then
      echo "$PID_FILE exists, process is already running"
      exit 0
    fi
    echo "$PID_FILE exists but the process is not running. Deleting $PID_FILE and re-trying"
    rm -f $PID_FILE
    start
    return $?
  fi

  /bin/su $KAFKA_USER -c "KAFKA_JMX_OPTS=\"$KAFKA_JMX_OPTS\" $DAEMON $DAEMON_OPTS > /var/log/kafka/server.out 2> /var/log/kafka/server.err &"
  sleep 2
  PID=`pgrep -f "$PGREP_PATTERN"`
  if [ -z "$PID" ]; then
    echo "\n $NAME could not be started"
    exit 1
  fi

  echo $PID > $PID_FILE;
  echo "\n$NAME started"
}

stop() {
  if [ ! -f $PID_FILE ]; then
    echo "$PID_FILE does not exist, process is not running"
    return 1
  fi

  kill `cat $PID_FILE`;
  rm -f $PID_FILE;
  echo "$NAME stopped"
  return 0
}

status() {
  if [ ! -f $PID_FILE ]; then
    echo "$NAME stopped"
    exit 1
  fi

  PID=`cat $PID_FILE`
  if `ps -p "$PID" -o pid= ` -eq `pgrep -f "$PGREP_PATTERN"`; then
    echo "$NAME stopped but pid file exists"
    exit 1
  fi

  echo "$NAME running with pid $PID"
  exit 0
}

case "$1" in
  status)
    status
	;;
  start)
    echo "Starting daemon: "$NAME
    start
	;;
  stop)
    echo "Stopping daemon: "$NAME
    stop
	;;
  restart)
    echo "Restarting daemon: "$NAME
	  stop
    sleep 2
    start
	;;

  *)
	echo "Usage: "$1" {status|start|stop|restart}"
	exit 1
esac

exit 0
